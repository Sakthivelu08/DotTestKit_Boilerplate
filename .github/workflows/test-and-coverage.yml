name: Run Angular and API Tests with Coverage

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ] 

jobs:
  test-and-coverage:
    runs-on: windows-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # ===================== Angular Frontend =====================
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Angular dependencies
        working-directory: Client
        run: npm ci

      - name: Run Angular tests with coverage
        working-directory: Client
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          npx ng test --browsers=ChromeHeadless --watch=false --code-coverage
          echo "Angular tests completed."

      - name: Upload Angular Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: angular-code-coverage-report
          path: Client/coverage/client

      # ===================== .NET API Backend =====================
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore .NET dependencies
        working-directory: API/DotTestKit.API
        run: dotnet restore

      - name: Build API Project
        working-directory: API/DotTestKit.API
        run: dotnet build --no-restore --configuration Release

      - name: Run API Tests with Coverage
        working-directory: API/DotTestKit.API.Tests
        run: |
          dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory TestResults
          Write-Host "API tests and coverage collection completed."

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Add ReportGenerator to PATH
        run: echo "${{ runner.home }}/.dotnet/tools" >> $GITHUB_PATH

      - name: Generate HTML report
        working-directory: API/DotTestKit.API.Tests
        run: |
          # Debug: List TestResults content
          Write-Host "Listing TestResults folder:"
          Get-ChildItem -Path "TestResults" -Recurse
          
          # Find coverage file
          $coverageFile = Get-ChildItem -Path "TestResults" -Recurse -Filter "coverage.cobertura.xml" | Select-Object -First 1
          
          if (-not $coverageFile) { throw "Coverage file not found!" }
          
          # Generate HTML report
          reportgenerator -reports:$coverageFile.FullName -targetdir:"CoverageReport" -reporttypes:Html

      - name: Upload API Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: api-code-coverage-report
          path: API/DotTestKit.API.Tests/CoverageReport
